{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start Dev Server (Turbopack)",
      "type": "shell",
      "command": "pwsh",
      "args": ["-NoProfile", "-ExecutionPolicy", "Bypass", "-Command", "cd site; npm run dev"],
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": false
      },
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "Start Dev Server (Keep-Alive)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/scripts/start-dev-server.ps1",
        "-KeepAlive"
      ],
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Start MCP Servers",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/scripts/start-mcp-servers.ps1"
      ],
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Start MCP Servers (no browser)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/scripts/start-mcp-servers.ps1",
        "-NoPuppeteer",
        "-NoPlaywright"
      ],
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Start Firebase Emulators",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}'; firebase emulators:start --project demo-test"
      ],
      "problemMatcher": [],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": false
      }
    },
    {
      "label": "Stop Firebase Emulators",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "Stop-Process -Name 'java' -Force -ErrorAction SilentlyContinue; Write-Host '‚úÖ Firebase emulators stopped'"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "Clear Emulator Data",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}'; if (Test-Path 'firebase-export') { Remove-Item -Recurse -Force firebase-export; Write-Host '‚úÖ Cleared firebase-export directory' } else { Write-Host '‚ÑπÔ∏è  No firebase-export directory to clear' }"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "Restart Firebase Emulators",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "Stop-Process -Name 'java' -Force -ErrorAction SilentlyContinue; Start-Sleep -Seconds 2; if (Test-Path 'firebase-export') { Remove-Item -Recurse -Force firebase-export }; Write-Host 'üîÑ Restarting emulators...'; Start-Process pwsh -ArgumentList '-NoProfile','-ExecutionPolicy','Bypass','-Command','cd ${workspaceFolder}; firebase emulators:start --project demo-test' -WindowStyle Minimized; Start-Sleep -Seconds 12; Write-Host '‚úÖ Emulators restarted'"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      }
    },
    {
      "label": "Run Integration Tests",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}/site'; npx.cmd playwright test --project=integration --reporter=list"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": true
      }
    },
    {
      "label": "Run All Tests",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}/site'; Write-Host 'üß™ Running all test suites (E2E + Integration)...'; npx.cmd playwright test --reporter=list"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": true
      }
    },
    {
      "label": "Run Performance Tests",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}/site'; Write-Host 'üß™ Running performance tests...'; npx.cmd playwright test --project=integration --reporter=list performance-emulator.spec.js"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": true
      }
    },
    {
      "label": "Run Security Tests",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}/site'; Write-Host 'üîí Running security tests...'; npx.cmd playwright test --project=integration --reporter=list security-emulator.spec.js"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": true
      }
    }
  ]
}
